
y...y
yZy =>  yZ
yXy => Xy.y.
yXZy => [XZy | XyZ]


XyXZy
sorted(X)

.......xWXWxWyXxZy
wW..x...wW...yXxZy


y in sorted(set(s),reversed)
   idx1 = s.find(y)
   idx2 = s.find(y, idx1+1)
   
   while idx1 != -1: # found y 
    if idx2 == -1: #last one
      continue
    
    idxZ = s.find( Z, idx1, idx2)
    idxX = s.find( X, idx1, idx2)
    
    if idxZ != -1:
      if idxX == -1 or idxX > idxZ:
        #yZy #yZXy  => yZ
        remove_yZy(s, idx2)
      else:
        #yXZy => [XZy | XyZ]
        greedy_XZy = removeDup()
        greedy_XyZ = removeDup()
        if greedy_XZy < greedy_XyZ:
           remove_yXZy(s, idx1) # remove 1st y
        else:
           remove_yXZy(s, idx2) # remove 2nd y
    elif idxX != -1:
      # yXy => Xy
      remove_yXy(s, idx1)
      idx1 = idx2
      idx2 = s.find(y, idx2+1)
      continue # while idx1 != -1
    
   



                  Z      : pass
                  ZAZ    : AZ - repeat


[Z-A]
yioccqiorhtoslwlvfgzycahonecugtatbyphpuunwvaalcpndabyldkdtzfjlgwqk  : Z=z
yioccqiorhtoslwlvfg ycahonecugtatbyphpuunwvaalcpndabyldkdtzfjlgwqk  : AZA
yioccqiorhtoslwlvfg ycahonecugtatbyphpuunwvaalcpndabyldkdtzfjlgwqk  : Z=y
y                   y                                               : ZAZ
 ioccqiorhtoslwlvfg ycahonecugtatbyphpuunwvaalcpndabyldkdtzfjlgwqk  : AZ
                    y             y                                 : ZAZ
 ioccqiorhtoslwlvfg  cahonecugtatbyphpuunwvaalcpndabyldkdtzfjlgwqk  : AZ
                                  y                 y               : ZAZ 
 ioccqiorhtoslwlvfg  cahonecugtatb phpuunwvaalcpndabyldkdtzfjlgwqk  : AZ
 ioccqiorhtoslwlvfg  cahonecugtatb phpuunwvaalcpndabyldkdtzfjlgwqk  : Z=x,w
              w                          w                          : ZAZ
 ioccqiorhtosl lvfg  cahonecugtatb phpuunwvaalcpndabyldkdtzfjlgwqk  : AZ
                                         w                     w    : ZAZ
 ioccqiorhtosl lvfg  cahonecugtatb phpuun vaalcpndabyldkdtzfjlgwqk  : AZ                                         
 ioccqiorhtosl lvfg  cahonecugtatb phpuun vaalcpndabyldkdtzfjlgwqk  : Z=v
                v                         v                         : ZAZ
 ioccqiorhtosl l fg  cahonecugtatb phpuun vaalcpndabyldkdtzfjlgwqk  : AZ
 ioccqiorhtosl l fg  cahonecugtatb phpuun vaalcpndabyldkdtzfjlgwqk  : Z=u
                            u         u                             : ZAZ
 ioccqiorhtosl l fg  cahonec gtatb phpuun vaalcpndabyldkdtzfjlgwqk  : AZ
                                      uu                            : ZAZ
 ioccqiorhtosl l fg  cahonec gtatb php un vaalcpndabyldkdtzfjlgwqk  : AZ
 ioccqiorhtosl l fg  cahonec gtatb php un vaalcpndabyldkdtzfjlgwqk  : Z=t
          t                   t                                     : ZAZ
 ioccqiorh osl l fg  cahonec gtatb php un vaalcpndabyldkdtzfjlgwqk  : AZ
                              t t                                   : ZAZ
 ioccqiorh osl l fg  cahonec g atb php un vaalcpndabyldkdtzfjlgwqk  : AZ
                                t                        t          : ZAZ
 ioccqiorh osl l fg  cahonec g a b php un vaalcpndabyldkdtzfjlgwqk  : AZ
 ioccqiorh osl l fg  cahonec g a b php un vaalcpndabyldkdtzfjlgwqk  : Z=s
            s                                                       : AZ
 ioccqiorh osl l fg  cahonec g a b php un vaalcpndabyldkdtzfjlgwqk  : Z=r
        r 
 ioccqiorh osl l fg  cahonec g a b php un vaalcpndabyldkdtzfjlgwqk  : Z=q
     q                                                          q   : ZAZ
 iocc iorh osl l fg  cahonec g a b php un vaalcpndabyldkdtzfjlgwqk  : AZ
 iocc iorh osl l fg  cahonec g a b php un vaalcpndabyldkdtzfjlgwqk  : Z=p
                                   p p                              : ZAZ
 iocc iorh osl l fg  cahonec g a b  hp un vaalcpndabyldkdtzfjlgwqk  : AZ
                                     p         p                    : ZAZ
 iocc iorh osl l fg  cahonec g a b  h  un vaalcpndabyldkdtzfjlgwqk  : AZ
 iocc iorh osl l fg  cahonec g a b  h  un vaalcpndabyldkdtzfjlgwqk  : Z=o
  o    o                                                            : ZAZ
 i cc iorh osl l fg  cahonec g a b  h  un vaalcpndabyldkdtzfjlgwqk  : AZ
       o   o                                                        : ZAZ
 i cc i rh osl l fg  cahonec g a b  h  un vaalcpndabyldkdtzfjlgwqk  : AZ
           o            o                                           : ZAZ
 i cc i rh  sl l fg  cahonec g a b  h  un vaalcpndabyldkdtzfjlgwqk  : AZ
 i cc i rh  sl l fg  cahonec g a b  h  un vaalcpndabyldkdtzfjlgwqk  : Z=n
                         n              n                           : ZAZ
 i cc i rh  sl l fg  caho ec g a b  h  un vaalcpndabyldkdtzfjlgwqk  : AZ
                                        n       n                   : ZAZ
 i cc i rh  sl l fg  caho ec g a b  h  u  vaalcpndabyldkdtzfjlgwqk  : AZ
 i cc i rh  sl l fg  caho ec g a b  h  u  vaalcpndabyldkdtzfjlgwqk  : Z=m,l
             l l                                                    : ZAZ
 i cc i rh  s  l fg  caho ec g a b  h  u  vaalcpndabyldkdtzfjlgwqk  : AZ

               l                             l       l       l      : ZAZAZ
 i cc i rh  s    fg  caho ec g a b  h  u  vaa cpndaby dkdtzfjlgwqk  : AZ
 i cc i rh  s    fg  caho ec g a b  h  u  vaa cpndaby dkdtzfjlgwqk  : Z=k
                                                       k         k  : ZAZ
 i cc i rh  s    fg  caho ec g a b  h  u  vaa cpndaby d dtzfjlgwqk  : AZ
 i cc i rh  s    fg  caho ec g a b  h  u  vaa cpndaby d dtzfjlgwqk  : Z=j
                                                            j
 i cc i rh  s    fg  caho ec g a b  h  u  vaa cpndaby d dtzfjlgwqk  : Z=i                                                           
 i    i                                                   




class Solution:

    def removeDuplicateLetters(self, s):
        """
        :type s: str
        :rtype: str
        """
        charSet = sorted(set(s), reverse=True)
        print("start: ", s, charSet)

        for key, y in enumerate(charSet):
            idx1 = s.find(y)
            idx2 = s.find(y, idx1+1)
            print("y:", y, idx1, idx2)
            while idx1 != -1 and idx2 != -1: # found y, and not the last one
             
                idxZ = -1                   #idxZ = s.find( Z, idx1, idx2)            
                for Z in charSet[:key]:
                    idxZ = s.find(Z, idx1, idx2 )
                    if -1 != idxZ:
                        print("Z:",Z)
                        break

                
                #idxX = s.find( X, idx1, idx2)
                idxX = -1
                for X in charSet[key+1:]:
                    idxX = s.find(X, idx1, idx2 )
                    if -1 != idxX:
                        print("X:",X)
                        break  
                
                print(idxZ, idxX)

                if idxZ != -1:
                    if idxX == -1 or idxX > idxZ:
                        #yZy #yZXy  => yZ
                        #remove_yZy(s, idx2)
                        s = s[0:idx2] + s[idx2:].replace(y, '')
                        print("yZy =>yZ", s, y, idx1, idx2, idxX, idxZ)
                        break
                    else:
                        #yXZy => [XZy | y'X'Z] , where 'X' will be removed later
                        greedy_XZy = self.removeDuplicateLetters( s[:idx1] + s[idx1+1:])
                        greedy_yXZ = self.removeDuplicateLetters( s[:idx2] + s[idx2+1:])
                        if greedy_XZy < greedy_yXZ:
                            #remove_yXZy(s, idx1) # remove 1st y
                            s = s[:idx1] + s[idx1+1:]
                            idx1 = idx2-1
                            idx2 = s.find(y, idx1+1)
                            print("yXZy => XZy", s, y, idx1, idx2, idxX, idxZ)
                            continue
                        else:
                            #remove_yXZy(s, idx2) # remove 2nd y, and the rest
                            s = s[:idx2] + s[idx2:].replace(y, '')
                            print("yXZy => XZy", s, y, idx1, idx2, idxX, idxZ)
                            break
                elif idxX != -1:
                    # yXy => Xy
                    #remove_yXy(s, idx1)
                    s = s[:idx1] + s[idx1+1:]
                    idx1 = idx2-1
                    idx2 = s.find(y, idx1+1)
                    print("yXy=>Xy", s, y, idx1, idx2, idxX, idxZ)
                    continue # while idx1 != -1
                
                else: #yy
                    print("yy", s, y, idx1, idx2, idxX, idxZ)
                    s = s[:idx1] + s[idx1+1:]
                    idx1 = idx2-1
                    idx2 = s.find(y, idx1+1)
                    print("yy2", s, y, idx1, idx2, idxX, idxZ)
                    continue # while idx1 != -1
                    

        return s
print("result: ciorhsaebpunvdyktzfjlgwq" , Solution().removeDuplicateLetters("yioccqiorhtoslwlvfgzycahonecugtatbyphpuunwvaalcpndabyldkdtzfjlgwqk"))
#print("result: adbe" , Solution().removeDuplicateLetters("beeaddbeb"))
#print("result: abc" , Solution().removeDuplicateLetters("bcabc"))
#print("result: acdb" , Solution().removeDuplicateLetters("cbcacdcbc"))
print("result: hesitxyplovdqfkz" , Solution().removeDuplicateLetters("thesqtitxyetpxloeevdeqifkz"))
#print("result: " , Solution().removeDuplicateLetters("ccacbacba"))
#print("result: " , Solution().removeDuplicateLetters("ccacbaba"))
#print("result: " , Solution().removeDuplicateLetters("baab"))
